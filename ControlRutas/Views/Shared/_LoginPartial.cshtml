@using Microsoft.AspNet.Identity
@using ControlRutas.DTO
@using ControlRutas.Data
@using ControlRutas.Helpers

@{
    UsuarioOB usuarioOB = null;
    if (Request.IsAuthenticated)
    {
        try
        {
            var userId = Request.GetOwinContext().Authentication.User.Identity.GetUserId();
            if (!string.IsNullOrEmpty(userId))
            {
                usuarioOB = UsuarioActual.ObtenerUsuario(userId);
            }
        }
        catch (Exception ex)
        {
            // Log the exception or handle it gracefully
            <text>
                <script>
                    console.error('Error loading user data: @ex.Message');
                </script>
            </text>
        }
    }
}

@if (Request.IsAuthenticated && usuarioOB != null)
{
    int idEstablecimiento = usuarioOB.IdEstablecimiento;
    ControlRutasEntities db = new ControlRutasEntities();
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Hola " + User.Identity.GetUserName() + "!", "Details", "Usuarios", new { Id = usuarioOB.Id }, htmlAttributes: new { title = "Manage", @class = "nav-link" })
            </li>
            <li><a class="nav-link" href="javascript:document.getElementById('logoutForm').submit()">Cerrar sesión</a></li>
        </ul>
    }
}
else
{
    <ul class="navbar-nav navbar-right">
        <li>@Html.ActionLink("Iniciar sesión", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "nav-link" })</li>
    </ul>
}
